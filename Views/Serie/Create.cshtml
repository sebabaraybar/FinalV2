@using Entities.Enum
@model Entities.ViewModels.SerieCreateVM

@{
    ViewData["Title"] = "Create";
    var actorList = ViewData["Actors"];
}

<h1>Create</h1>

<h4>Serie</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Director" class="control-label"></label>
                <input asp-for="Director" class="form-control" />
                <span asp-validation-for="Director" class="text-danger"></span>
            </div>
            <div class="form-group">
                <select name="Genre">
                    @foreach (Genre genre in Enum.GetValues(typeof(Genre)))
                    {
                        <option value="@genre">@genre.ToString()</option>
                    }
                </select>
                <span asp-validation-for="Genre" class="text-danger"></span>
            </div>
            <div class="form-group">
                <select multiple asp-for="ActorIds" id="Series" asp-items="ViewBag.Actors"></select>

            </div <div class="form-group">
            <input type="submit" value="Create" asp-controller="Serie" class="btn btn-primary" />
    </div>
    </form>
</div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
